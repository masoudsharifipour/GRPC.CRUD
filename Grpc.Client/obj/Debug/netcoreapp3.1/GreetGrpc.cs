// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService_Crud {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class EmployeeCRUD
  {
    static readonly string __ServiceName = "greet.EmployeeCRUD";

    static readonly grpc::Marshaller<global::GrpcService_Crud.Empty> __Marshaller_greet_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService_Crud.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService_Crud.Employees> __Marshaller_greet_Employees = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService_Crud.Employees.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService_Crud.EmployeeFilter> __Marshaller_greet_EmployeeFilter = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService_Crud.EmployeeFilter.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService_Crud.Employee> __Marshaller_greet_Employee = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService_Crud.Employee.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService_Crud.Empty, global::GrpcService_Crud.Employees> __Method_SelectAll = new grpc::Method<global::GrpcService_Crud.Empty, global::GrpcService_Crud.Employees>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SelectAll",
        __Marshaller_greet_Empty,
        __Marshaller_greet_Employees);

    static readonly grpc::Method<global::GrpcService_Crud.EmployeeFilter, global::GrpcService_Crud.Employee> __Method_SelectByID = new grpc::Method<global::GrpcService_Crud.EmployeeFilter, global::GrpcService_Crud.Employee>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SelectByID",
        __Marshaller_greet_EmployeeFilter,
        __Marshaller_greet_Employee);

    static readonly grpc::Method<global::GrpcService_Crud.Employee, global::GrpcService_Crud.Empty> __Method_Insert = new grpc::Method<global::GrpcService_Crud.Employee, global::GrpcService_Crud.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Insert",
        __Marshaller_greet_Employee,
        __Marshaller_greet_Empty);

    static readonly grpc::Method<global::GrpcService_Crud.Employee, global::GrpcService_Crud.Empty> __Method_Update = new grpc::Method<global::GrpcService_Crud.Employee, global::GrpcService_Crud.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_greet_Employee,
        __Marshaller_greet_Empty);

    static readonly grpc::Method<global::GrpcService_Crud.EmployeeFilter, global::GrpcService_Crud.Empty> __Method_Delete = new grpc::Method<global::GrpcService_Crud.EmployeeFilter, global::GrpcService_Crud.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_greet_EmployeeFilter,
        __Marshaller_greet_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService_Crud.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for EmployeeCRUD</summary>
    public partial class EmployeeCRUDClient : grpc::ClientBase<EmployeeCRUDClient>
    {
      /// <summary>Creates a new client for EmployeeCRUD</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EmployeeCRUDClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EmployeeCRUD that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EmployeeCRUDClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EmployeeCRUDClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EmployeeCRUDClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcService_Crud.Employees SelectAll(global::GrpcService_Crud.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelectAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService_Crud.Employees SelectAll(global::GrpcService_Crud.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SelectAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Employees> SelectAllAsync(global::GrpcService_Crud.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelectAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Employees> SelectAllAsync(global::GrpcService_Crud.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SelectAll, null, options, request);
      }
      public virtual global::GrpcService_Crud.Employee SelectByID(global::GrpcService_Crud.EmployeeFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelectByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService_Crud.Employee SelectByID(global::GrpcService_Crud.EmployeeFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SelectByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Employee> SelectByIDAsync(global::GrpcService_Crud.EmployeeFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SelectByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Employee> SelectByIDAsync(global::GrpcService_Crud.EmployeeFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SelectByID, null, options, request);
      }
      public virtual global::GrpcService_Crud.Empty Insert(global::GrpcService_Crud.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Insert(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService_Crud.Empty Insert(global::GrpcService_Crud.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Empty> InsertAsync(global::GrpcService_Crud.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Empty> InsertAsync(global::GrpcService_Crud.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual global::GrpcService_Crud.Empty Update(global::GrpcService_Crud.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService_Crud.Empty Update(global::GrpcService_Crud.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Empty> UpdateAsync(global::GrpcService_Crud.Employee request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Empty> UpdateAsync(global::GrpcService_Crud.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::GrpcService_Crud.Empty Delete(global::GrpcService_Crud.EmployeeFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService_Crud.Empty Delete(global::GrpcService_Crud.EmployeeFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Empty> DeleteAsync(global::GrpcService_Crud.EmployeeFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService_Crud.Empty> DeleteAsync(global::GrpcService_Crud.EmployeeFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EmployeeCRUDClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EmployeeCRUDClient(configuration);
      }
    }

  }
}
#endregion
